%% --- LABORATOR 2 ---
% 1. Verificati functionarea algoritmului de detectie defecte prin comparatie.
% 2. Incercati functionarea cu o translatie diferita de cea corecta (adica 10,10).
% 3. Incercati sa folositi imaginea pcb.png (care nu e cropped) pentru
%       comparatie. Deoarece e de altÄƒ dimensiune, folosiÈ›i doar o porÈ›iune din
%       imagine (stÃ¢nga-sus, dreapta, jos, etc) cu dimensiunea corectÄƒ.
% 4.  Raspunsul este un fisier TXT care contine o descriere personala de cateva
%       fraze a constatarilor voastre pe subiect.

--------------------------------------------------------------------------------

1. Am rulat algoritmul cu o translaÈ›ie de 10 pixeli. Defectele din imagine sunt
    acum vizibile clar, fÄƒrÄƒ zgomot sau erori. Se pare cÄƒ diferenÈ›ele dintre
    imagini sunt evidenÈ›iate perfect, iar zonele cu probleme apar aliniate
    corect Ã®n imaginea finalÄƒ.
2. Am modificat translaÈ›ia din (10,10) pe alte valori (50, 50), cauzÃ¢nd o
    nealiniere a imaginilor. Din aceastÄƒ cauzÄƒ, diferenÈ›ele detectate sunt mai
    mari È™i mai zgomotoase, iar defectele nu se mai disting clar Ã®n rezultat.
3. Pentru a compara imaginea completÄƒ pcb.png (care nu este cropped) cu imaginea
    defectÄƒ, am folosit o porÈ›iune din imaginea completÄƒ cu aceeaÈ™i dimensiune
    ca imaginea defectÄƒ. Am calculat diferenÈ›ele de dimensiune (hDiff È™i wDiff)
    È™i am extras o zonÄƒ de interes din pcb.png, pornind de la
    (hDiff + 1, wDiff + 1) pÃ¢nÄƒ la dimensiunile dorite (dH, dW). Astfel, am
    selectat o porÈ›iune specificÄƒ din pcb.png (de exemplu, dreapta-jos) pentru
    comparaÈ›ie.

Pentru a vedea toate implementÄƒrile complete È™i tot ce È›ine de materia PI,
acestea sunt disponibile la:
ğŸ”— https://github.com/HerteCristianPaul/Y2g7T9pKq8bL4XfV3rMzN1aQ.
